THEODORE LESSMAN    ASSIGNMENT 5

1.

.pos 0
Init:
    irmovl Stack, %ebp
    irmovl Stack, %esp
    call main
    halt

main:
    pushl %ebp
    rrmovl %esp, %ebp
    irmovl $8, %edx
    pushl %edx
    irmovl $3, %edx
    pushl %edx
    call g


f:
    pushl %ebp
    rrmovl %esp, %ebp
    mrmovl 8(%ebp), %edx
    addl %edx, %eax
    addl %edx, %eax
    addl %edx, %eax
    rrmovl %ebp, %esp
    popl %ebp
    ret

g:
    pushl %ebp
    rrmovl %esp, %ebp
    mrmovl 12(%ebp), %edx
    pushl %edx
    call f
    rrmovl %eax, %ebx
    mrmovl 8(%ebp), %edx
    pushl %edx
    call f
    rrmovl %ebp, %esp
    popl %ebp

.pos 0x100
Stack:

2.
see logica05.png

3.           0    1    2    3    4    5
iaddl V, rB  C    F rB ---------V---------

           iaddl V, rB
     FETCH 	icode:ifun <- M[PC]
		rA:rB <- M[PC+1]
		valC <- M4[PC+2]
		valP <- PC+6

    DECODE 	valB <- valB + valC
		Set CC

   EXECUTE 	valE <- valB + va
		ValE <- valE + valA
		Set CC

    MEMORY 	

WRITE_BACK 	R[rB] <- valE

 PC_UPDATE 	PC <- valP
